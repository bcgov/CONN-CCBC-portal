# This workflow contains all tests and security scanning that rely on the built production containers
name: test-e2e

on:
  workflow_call:
    secrets:
      HAPPO_API_KEY: { required: true }
      HAPPO_API_SECRET: { required: true }
      RENOVATE_GITHUB_TOKEN: { required: true }
      RENOVATE_PRIVATE_KEY: { required: true }

concurrency:
  group: test-e2e-${{ github.ref }}
  cancel-in-progress: true

env:
  PGUSER: postgres

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      changes-detected: ${{ steps.check-changes.outputs.changes-detected }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check for changes in app or db folders
        id: check-changes
        run: |
          # Compare PR branch (HEAD) against the base branch (main)
          CHANGED=$(git diff --name-only origin/main HEAD | grep -E '^app/|^db/' || true)
          if [ -z "$CHANGED" ]; then
            echo "No changes detected in app or db folders."
            echo "changes-detected=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in app or db folders."
            echo "changes-detected=true" >> $GITHUB_OUTPUT
          fi
  generate-matrix:
    runs-on: ubuntu-latest
    #  needs: check-changes
    outputs:
      files: ${{ steps.set-matrix.outputs.files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find test files
        id: set-matrix
        run: |
          FILES=$(find cypress/e2e -type f -name "*.cy.js" ! -name "setup.cy.js" | jq -R -s -c 'split("\n")[:-1]')
          echo "files=$FILES" >> $GITHUB_OUTPUT
        working-directory: ./app
  # yarn-test-e2e-applicant:
  #   needs: check-changes
  #   if: ${{ needs.check-changes.outputs.changes-detected == 'true' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: dev env setup
  #       uses: ./.github/actions/dev-env-setup
  #     - name: run app locally
  #       uses: ./.github/actions/local-app-run
  #     - run: yarn install --frozen-lockfile
  #       working-directory: ./app
  #     - name: run e2e tests
  #       env:
  #         HAPPO_API_KEY: ${{ secrets.HAPPO_API_KEY }}
  #         HAPPO_API_SECRET: ${{ secrets.HAPPO_API_SECRET }}
  #         HAPPO_NONCE: ${{ github.sha }}
  #       run: yarn test:e2e:applicant
  #       working-directory: ./app

  # yarn-test-e2e-admin:
  #   needs: check-changes
  #   if: ${{ needs.check-changes.outputs.changes-detected == 'true' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: dev env setup
  #       uses: ./.github/actions/dev-env-setup
  #     - name: run app locally
  #       uses: ./.github/actions/local-app-run
  #     - run: yarn install --frozen-lockfile
  #       working-directory: ./app
  #     - name: run e2e tests
  #       env:
  #         HAPPO_API_KEY: ${{ secrets.HAPPO_API_KEY }}
  #         HAPPO_API_SECRET: ${{ secrets.HAPPO_API_SECRET }}
  #         HAPPO_NONCE: ${{ github.sha }}
  #       run: yarn test:e2e:admin
  #       working-directory: ./app

  # yarn-test-e2e-analyst:
  #   needs: check-changes
  #   if: ${{ needs.check-changes.outputs.changes-detected == 'true' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: dev env setup
  #       uses: ./.github/actions/dev-env-setup
  #     - name: run app locally
  #       uses: ./.github/actions/local-app-run
  #     - run: yarn install --frozen-lockfile
  #       working-directory: ./app
  #     - name: run e2e tests
  #       env:
  #         HAPPO_API_KEY: ${{ secrets.HAPPO_API_KEY }}
  #         HAPPO_API_SECRET: ${{ secrets.HAPPO_API_SECRET }}
  #         HAPPO_NONCE: ${{ github.sha }}
  #       run: yarn test:e2e:analyst
  #       working-directory: ./app

  run-tests:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ fromJson(needs.generate-matrix.outputs.files) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - name: run app locally
        uses: ./.github/actions/local-app-run
      - run: yarn install --frozen-lockfile
        working-directory: ./app
      - name: Run Cypress Test
        env:
          HAPPO_API_KEY: ${{ secrets.HAPPO_API_KEY }}
          HAPPO_API_SECRET: ${{ secrets.HAPPO_API_SECRET }}
          HAPPO_NONCE: ${{ github.sha }}
        run: |
          echo "Running Cypress test for ${{ matrix.file }}"
          yarn run test:e2e --spec '${{ matrix.file }}'
        working-directory: ./app

  yarn-test-e2e-finalize:
    runs-on: ubuntu-latest
    needs: [run-tests]
    steps:
      - uses: actions/checkout@v4
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - run: yarn install --frozen-lockfile
        working-directory: ./app
      - name: finalize e2e tests
        env:
          HAPPO_API_KEY: ${{ secrets.HAPPO_API_KEY }}
          HAPPO_API_SECRET: ${{ secrets.HAPPO_API_SECRET }}
          HAPPO_NONCE: ${{ github.sha }}
        run: npx happo-e2e finalize
        working-directory: ./app
