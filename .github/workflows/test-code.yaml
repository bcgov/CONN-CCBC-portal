# Tests that rely on the committed code, without needing the docker images to be built
name: test code

env:
  PGPASSWORD: mysecretpassword
  PGUSER: postgres
  PGDATABASE: ccbc

on:
  workflow_call:

concurrency:
  group: test-code-${{ github.ref }}
  cancel-in-progress: true

jobs:
  jest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - name: run jest tests with coverage
        uses: Wandalen/wretry.action@master
        with:
          current_path: ./app
          command: yarn test --coverage --silent
          attempt_limit: 2
          attempt_delay: 2000
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - run: yarn run eslint -f @microsoft/eslint-formatter-sarif -o results.sarif . || true
        working-directory: ./app
      - name: Remove entries with suppressions from SARIF
        run: |
          node - <<EOF
          const fs = require('fs');

          // Read the SARIF file
          const sarifData = fs.readFileSync('results.sarif', 'utf8');
          const sarifJson = JSON.parse(sarifData);

          // Remove entries with suppressions
          sarifJson.runs.forEach(run => {
            run.results = run.results.filter(result => !result.suppressions || result.suppressions?.length === 0);
          });

          // Write the modified SARIF file
          fs.writeFileSync('results.sarif', JSON.stringify(sarifJson, null, 2));
          EOF
        working-directory: ./app
      - uses: github/codeql-action/upload-sarif@429e1977040da7a23b6822b13c129cd1ba93dbb2
        with:
          sarif_file: app/results.sarif

  schema:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - name: deploy db migrations
        run: |
          docker run --rm -p 5432:5432 -e POSTGRES_PASSWORD=mysecretpassword -d postgres:15
          # Wait for PostgreSQL to be ready
          until docker exec $(docker ps -q -f ancestor=postgres:15) pg_isready -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          # Additional wait to ensure PostgreSQL is fully ready
          sleep 5
          # Check PostgreSQL readiness from the host one more time
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL to be ready from the host..."
            sleep 2
          done
          make drop_db PSQL="psql -h localhost -U postgres"
          make create_db PSQL="psql -h localhost -U postgres"
          # Deploy migrations
          docker pull sqitch/sqitch
          curl -L https://git.io/JJKCn -o sqitch && chmod +x sqitch
          ./sqitch --chdir db deploy
      - run: yarn build:schema
        working-directory: ./app
      - name: Check for inconsistency between graphql schema and commit schema
        run: git diff --exit-code || (echo 'The contents of the `schema` folder are out of sync with `app/schema/schema.graphql`. Did you forget to \"yarn build:schema\"?' && false)
