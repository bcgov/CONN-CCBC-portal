# Tests that rely on the committed code, without needing the docker images to be built
name: test code

env:
  PGPASSWORD: postgres
  PGUSER: postgres
  PGDATABASE: ccbc

on:
  workflow_call:

concurrency:
  group: test-code-${{ github.ref }}
  cancel-in-progress: true

jobs:
  jest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - name: run jest tests with coverage
        shell: bash
        working-directory: ./app
        run: yarn test --coverage
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - run: yarn run eslint -f @microsoft/eslint-formatter-sarif -o results.sarif . || true
        working-directory: ./app
      - name: Remove entries with suppressions from SARIF
        run: |
          node - <<EOF
          const fs = require('fs');

          // Read the SARIF file
          const sarifData = fs.readFileSync('results.sarif', 'utf8');
          const sarifJson = JSON.parse(sarifData);

          // Remove entries with suppressions
          sarifJson.runs.forEach(run => {
            run.results = run.results.filter(result => !result.suppressions || result.suppressions?.length === 0);
          });

          // Write the modified SARIF file
          fs.writeFileSync('results.sarif', JSON.stringify(sarifJson, null, 2));
          EOF
        working-directory: ./app
      - uses: github/codeql-action/upload-sarif@2d790406f505036ef40ecba973cc774a50395aac
        with:
          sarif_file: app/results.sarif

  schema:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - name: deploy db migrations
        run: make start_pg && make drop_db && make deploy_db_migrations
      - run: yarn build:schema
        working-directory: ./app
      - name: Check for inconsistency between graphql schema and commit schema
        run: git diff --exit-code || (echo 'The contents of the `schema` folder are out of sync with `app/schema/schema.graphql`. Did you forget to \"yarn build:schema\"?' && false)

  reverts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - name: deploy db migrations
        run: make start_pg && make drop_db && make deploy_db_migrations
      - name: revert db migrations
        run: make revert_db_migrations
      - name: re-deploy db migrations
        run: make deploy_db_migrations

  pgtap:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - name: Run Database Unit Tests
        run: make db_unit_tests
      - name: Run Database Style Tests
        run: make db_style_tests
