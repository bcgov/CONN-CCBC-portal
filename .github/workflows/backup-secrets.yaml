name: Export GitHub Secrets to HashiCorp Vault

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment that is associated with these secrets'
        required: true
        default: 'development'
        type: string
    secrets:
      OPENSHIFT_SERVER: { required: true }
      OPENSHIFT_TOKEN: { required: true }
      OPENSHIFT_APP_NAMESPACE: { required: true }
      OPENSHIFT_METABASE_NAMESPACE: { required: true }
      OPENSHIFT_METABASE_PROD_NAMESPACE: { required: true }
      NEXT_PUBLIC_GROWTHBOOK_API_KEY: { required: true }
      CLIENT_SECRET: { required: true }
      OPENSHIFT_SECURE_ROUTE: { required: true }
      AWS_S3_BUCKET: { required: true }
      AWS_S3_REGION: { required: true }
      AWS_S3_KEY: { required: true }
      AWS_S3_SECRET_KEY: { required: true }
      AWS_CLAM_S3_BUCKET: { required: true }
      AWS_ROLE_ARN: { required: true }
      CERTBOT_EMAIL: { required: true }
      CERTBOT_SERVER: { required: true }
      METABASE_SITE_URL: { required: true }
      METABASE_EMBED_SECRET: { required: true }
      CERT: { required: true }
      CERT_KEY: { required: true }
      CERT_CA: { required: true }
      SP_SA_USER: { required: true }
      SP_SA_PASSWORD: { required: true }
      SP_DOC_LIBRARY: { required: true }
      SP_SITE: { required: true }
      SP_MS_FILE_NAME: { required: true }
      SA_CLIENT_SECRET: { required: true }
      SA_CLIENT_ID: { required: true }
      KEYCLOAK_HOST: { required: true }
      SP_LIST_NAME: { required: true }
      VAULT_TOKEN: { required: true }
      VAULT_ADDR: { required: true }
      VAULT_NAMESPACE: { required: true }
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment that is associated with these secrets'
        required: true
        default: 'development'
        type: string

jobs:
  export-secrets:
    runs-on: ubuntu-latest
    environment:
      name: ${{inputs.environment}}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Install HashiCorp Vault
        run: |
          VAULT_VERSION="1.8.4"
          # wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip
          wget https://releases.hashicorp.com/vault/1.15.0/vault_1.15.0_linux_amd64.zip
          # unzip vault_${VAULT_VERSION}_linux_amd64.zip
          unzip vault_1.15.0_linux_amd64.zip
          sudo mv vault /usr/local/bin/
          vault --version
      - name: Set Prefix
        run: |
          if [ "${{ inputs.environment }}" == "development"]; then
            echo "PREFIX=ff61fb-nonprod/backups/dev/github-actions" >> $GITHUB_ENV
          elif [ "${{ inputs.environment }}" == "test"]; then
            echo "PREFIX=ff61fb-nonprod/backups/test/github-actions" >> $GITHUB_ENV
          elif [ ""${{ inputs.environment }}" == "production" ]; then
            echo "PREFIX=ff61fb-prod/backups/github-actions" >> $GITHUB_ENV
          fi
      - name: Export GitHub Secrets to Vault
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_NAMESPACE: ${{ secrets.VAULT_NAMESPACE }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          vault kv put $PREFIX/OPENSHIFT_SERVER value="${{ secrets.OPENSHIFT_SERVER }}"
          vault kv put $PREFIX/OPENSHIFT_TOKEN value="${{ secrets.OPENSHIFT_TOKEN }}"
          vault kv put $PREFIX/OPENSHIFT_APP_NAMESPACE value="${{ secrets.OPENSHIFT_APP_NAMESPACE }}"
          vault kv put $PREFIX/OPENSHIFT_METABASE_NAMESPACE value="${{ secrets.OPENSHIFT_METABASE_NAMESPACE }}"
          vault kv put $PREFIX/OPENSHIFT_METABASE_PROD_NAMESPACE value="${{ secrets.OPENSHIFT_METABASE_PROD_NAMESPACE }}"
          vault kv put $PREFIX/NEXT_PUBLIC_GROWTHBOOK_API_KEY value="${{ secrets.NEXT_PUBLIC_GROWTHBOOK_API_KEY }}"
          vault kv put $PREFIX/CLIENT_SECRET value="${{ secrets.CLIENT_SECRET }}"
          vault kv put $PREFIX/OPENSHIFT_SECURE_ROUTE value="${{ secrets.OPENSHIFT_SECURE_ROUTE }}"
          vault kv put $PREFIX/AWS_S3_BUCKET value="${{ secrets.AWS_S3_BUCKET }}"
          vault kv put $PREFIX/AWS_S3_REGION value="${{ secrets.AWS_S3_REGION }}"
          vault kv put $PREFIX/AWS_S3_KEY value="${{ secrets.AWS_S3_KEY }}"
          vault kv put $PREFIX/AWS_S3_SECRET_KEY value="${{ secrets.AWS_S3_SECRET_KEY }}"
          vault kv put $PREFIX/AWS_CLAM_S3_BUCKET value="${{ secrets.AWS_CLAM_S3_BUCKET }}"
          vault kv put $PREFIX/AWS_ROLE_ARN value="${{ secrets.AWS_ROLE_ARN }}"
          vault kv put $PREFIX/CERTBOT_EMAIL value="${{ secrets.CERTBOT_EMAIL }}"
          vault kv put $PREFIX/CERTBOT_SERVER value="${{ secrets.CERTBOT_SERVER }}"
          vault kv put $PREFIX/METABASE_SITE_URL value="${{ secrets.METABASE_SITE_URL }}"
          vault kv put $PREFIX/METABASE_EMBED_SECRET value="${{ secrets.METABASE_EMBED_SECRET }}"
          vault kv put $PREFIX/CERT value="${{ secrets.CERT }}"
          vault kv put $PREFIX/CERT_KEY value="${{ secrets.CERT_KEY }}"
          vault kv put $PREFIX/CERT_CA value="${{ secrets.CERT_CA }}"
          vault kv put $PREFIX/SP_SA_USER value="${{ secrets.SP_SA_USER }}"
          vault kv put $PREFIX/SP_SA_PASSWORD value="${{ secrets.SP_SA_PASSWORD }}"
          vault kv put $PREFIX/SP_DOC_LIBRARY value="${{ secrets.SP_DOC_LIBRARY }}"
          vault kv put $PREFIX/SP_SITE value="${{ secrets.SP_SITE }}"
          vault kv put $PREFIX/SP_MS_FILE_NAME value="${{ secrets.SP_MS_FILE_NAME }}"
          vault kv put $PREFIX/SA_CLIENT_SECRET value="${{ secrets.SA_CLIENT_SECRET }}"
          vault kv put $PREFIX/SA_CLIENT_ID value="${{ secrets.SA_CLIENT_ID }}"
          vault kv put $PREFIX/KEYCLOAK_HOST value="${{ secrets.KEYCLOAK_HOST }}"
          vault kv put $PREFIX/SP_LIST_NAME value="${{ secrets.SP_LIST_NAME }}"
