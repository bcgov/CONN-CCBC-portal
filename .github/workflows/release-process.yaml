name: Run release process

on:
  pull_request:
    types: [edited, synchronize]
  workflow_call:
    secrets:
      RENOVATE_GITHUB_TOKEN: { required: true }
      RENOVATE_PRIVATE_KEY: { required: true }

jobs:
  checkbox_action:
    runs-on: ubuntu-latest
    steps:
      - name: Check if checkbox is checked
        id: checkbox
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const checkboxes = pr.data.body.match(/\[[ x]\] (.*)/g);
            const checkboxChecked = checkboxes.some(cb => cb.includes("[x]"));
            console.log(checkboxChecked);
            return checkboxChecked;
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RENOVATE_GITHUB_TOKEN }}
      - name: Set up Git and import GPG key
        if: steps.checkbox.outputs.result == 'true'
        env:
          GPG_PRIVATE_KEY: ${{ secrets.RENOVATE_PRIVATE_KEY }}
        run: |
          echo "${GPG_PRIVATE_KEY}" | gpg --import
          git config user.name "CCBC Service Account"
          git config user.email "116113628+ccbc-service-account@users.noreply.github.com"
          git config user.signingkey "$(gpg --list-secret-keys --with-colons | awk -F: '/sec:/ {print $5}')"
          git config commit.gpgsign true
      - name: dev env setup
        if: steps.checkbox.outputs.result == 'true'
        uses: ./.github/actions/dev-env-setup
      - name: Setup Sqitch User
        if: steps.checkbox.outputs.result == 'true'
        run: |
          sqitch config --user user.name 'CCBC Service Account'
          sqitch config --user user.email 'ccbc@button.is'
      - name: Make Release
        if: steps.checkbox.outputs.result == 'true'
        run: |
          git push origin HEAD:refs/heads/${{ github.head_ref }}
          echo '--ci --branch=${refs/heads/${{ github.head_ref }}}' | make release
