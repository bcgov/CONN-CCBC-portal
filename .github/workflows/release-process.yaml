name: Run release process

on:
  pull_request:
    types: [edited, synchronize]
  workflow_call:
    secrets:
      RENOVATE_GITHUB_TOKEN: { required: true }
      RENOVATE_PRIVATE_KEY: { required: true }

jobs:
  checkbox_action:
    runs-on: ubuntu-latest
    steps:
      - name: Check release process checkbox
        id: checkbox
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const checkboxText = "[x] Check to trigger automatic release process";
            const checkboxChecked = pr.data.body.includes(checkboxText);
            console.log(checkboxChecked);
            return checkboxChecked;
      - name: Check if PR is up-to-date with main
        id: up_to_date
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const baseBranch = pr.data.base.ref;
            const mainBranch = 'main';
            const baseSha = pr.data.base.sha;

            const mainBranchRef = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/${mainBranch}`
            });
            const mainSha = mainBranchRef.data.object.sha;

            const upToDate = baseSha === mainSha;
            console.log(upToDate);
            return upToDate;
      - name: Check if PR is approved
        id: approved
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const approved = reviews.data.some(review => review.state === 'APPROVED');
            console.log(approved);
            return approved;
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RENOVATE_GITHUB_TOKEN }}
      - name: Set up Git and import GPG key
        if: steps.checkbox.outputs.result == 'true' && steps.up_to_date.outputs.result == 'true' && steps.approved.outputs.result == 'true'
        env:
          GPG_PRIVATE_KEY: ${{ secrets.RENOVATE_PRIVATE_KEY }}
        run: |
          echo "${GPG_PRIVATE_KEY}" | gpg --import
          git config user.name "CCBC Service Account"
          git config user.email "116113628+ccbc-service-account@users.noreply.github.com"
          git config user.signingkey "$(gpg --list-secret-keys --with-colons | awk -F: '/sec:/ {print $5}')"
          git config commit.gpgsign true
      - name: dev env setup
        if: steps.checkbox.outputs.result == 'true' && steps.up_to_date.outputs.result == 'true' && steps.approved.outputs.result == 'true'
        uses: ./.github/actions/dev-env-setup
      - name: Setup Sqitch User
        if: steps.checkbox.outputs.result == 'true' && steps.up_to_date.outputs.result == 'true' && steps.approved.outputs.result == 'true'
        run: |
          sqitch config --user user.name 'CCBC Service Account'
          sqitch config --user user.email 'ccbc@button.is'
      - name: Make Release
        if: steps.checkbox.outputs.result == 'true' && steps.up_to_date.outputs.result == 'true' && steps.approved.outputs.result == 'true'
        run: |
          yarn
          git checkout "${GITHUB_HEAD_REF}"
          yarn run release-it --ci --branch="${GITHUB_HEAD_REF}" --git.commitArgs=-n
      - name: Uncheck the checkbox
        if: steps.checkbox.outputs.result == 'true' && steps.up_to_date.outputs.result == 'true' && steps.approved.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const checkboxText = "[x] Check to trigger automatic release process";
            const prNumber = context.payload.pull_request.number;
            const currentPR = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            const updatedBody = currentPR.data.body.replace(checkboxText, "[ ] Check to trigger automatic release process");
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: updatedBody
            });
