name: deploy

on:
  workflow_call:
    secrets:
      OPENSHIFT_SERVER: { required: true }
      OPENSHIFT_TOKEN: { required: true }
      OPENSHIFT_APP_NAMESPACE: { required: true }
      OPENSHIFT_METABASE_NAMESPACE: { required: true }
      OPENSHIFT_METABASE_PROD_NAMESPACE: { required: true }
      NEXT_PUBLIC_GROWTHBOOK_API_KEY: { required: true }
      CLIENT_SECRET: { required: true }
      OPENSHIFT_SECURE_ROUTE: { required: true }
      AWS_S3_BUCKET: { required: true }
      AWS_S3_REGION: { required: true }
      AWS_S3_KEY: { required: true }
      AWS_S3_SECRET_KEY: { required: true }
      AWS_CLAM_S3_BUCKET: { required: true }
      AWS_ROLE_ARN: { required: true }
      CERTBOT_EMAIL: { required: true }
      CERTBOT_SERVER: { required: true }
      METABASE_SITE_URL: { required: true }
      METABASE_EMBED_SECRET: { required: true }
      CERT: { required: true }
      CERT_KEY: { required: true }
      CERT_CA: { required: true }
      SP_SA_USER: { required: true }
      SP_SA_PASSWORD: { required: true }
      SP_DOC_LIBRARY: { required: true }
      SP_SITE: { required: true }
      SP_MS_FILE_NAME: { required: true }
      SA_CLIENT_SECRET: { required: true }
      SA_CLIENT_ID: { required: true }
      KEYCLOAK_HOST: { required: true }
      SP_LIST_NAME: { required: true }

env:
  TAG: sha-${{ github.sha }}

jobs:
  is-tagged-release:
    runs-on: ubuntu-latest
    outputs:
      tagVersion: ${{steps.tagVersion.outputs.tagVersion}}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Is Tagged Commit
        id: tagVersion
        # Check if one of the commits is associated with a tag
        run: |
          echo "tagVersion=$( git tag --merged ${{ github.sha  }} --no-merged ${{ github.event.before }} | grep v*)" >>$GITHUB_OUTPUT

  deploy-to-openshift-development:
    runs-on: ubuntu-latest
    environment:
      name: development
      # url: 'https://ccbc-dev.apps.silver.devops.gov.bc.ca'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy
        uses: ./.github/actions/app
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          openshift_app_namespace: ${{ secrets.OPENSHIFT_APP_NAMESPACE }}
          openshift_metabase_namespace: ${{ secrets.OPENSHIFT_METABASE_NAMESPACE }}
          openshift_metabase_prod_namespace: ${{ secrets.OPENSHIFT_METABASE_PROD_NAMESPACE }}
          next_public_growthbook_api_key: ${{ secrets.NEXT_PUBLIC_GROWTHBOOK_API_KEY }}
          tag: ${{ env.TAG }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          secure_route: ${{ secrets.OPENSHIFT_SECURE_ROUTE }}
          aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
          aws_s3_region: ${{ secrets.AWS_S3_REGION }}
          aws_s3_key: ${{ secrets.AWS_S3_KEY }}
          aws_s3_secret_key: ${{ secrets.AWS_S3_SECRET_KEY }}
          aws_clam_s3_bucket: ${{ secrets.AWS_CLAM_S3_BUCKET }}
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
          certbot_email: ${{ secrets.CERTBOT_EMAIL }}
          certbot_server: ${{ secrets.CERTBOT_SERVER }}
          metabase_site_url: ${{ secrets.METABASE_SITE_URL }}
          metabase_embed_secret: ${{ secrets.METABASE_EMBED_SECRET }}
          cert: ${{ secrets.CERT }}
          cert_key: ${{ secrets.CERT_KEY }}
          cert_ca: ${{ secrets.CERT_CA }}
          sp_sa_user: ${{ secrets.SP_SA_USER }}
          sp_sa_password: ${{ secrets.SP_SA_PASSWORD }}
          sp_doc_library: ${{ secrets.SP_DOC_LIBRARY }}
          sp_site: ${{ secrets.SP_SITE }}
          sp_ms_file_name: ${{ secrets.SP_MS_FILE_NAME }}
          keycloak_host: ${{ secrets.KEYCLOAK_HOST }}
          sa_client_secret: ${{ secrets.SA_CLIENT_SECRET }}
          sa_client_id: ${{ secrets.SA_CLIENT_ID }}
          sp_list_name: ${{ secrets.SP_LIST_NAME }}
          environment: dev

  ensure-sqitch-plan-ends-with-tag:
    runs-on: ubuntu-latest
    needs: [is-tagged-release]
    if: contains(needs.is-tagged-release.outputs.tagVersion, 'v')
    steps:
      - uses: actions/checkout@v4
      - run: ./.bin/sqitch-last-change-is-tag.sh db

  deploy-to-openshift-test:
    needs:
      [
        deploy-to-openshift-development,
        ensure-sqitch-plan-ends-with-tag,
        is-tagged-release,
      ]
    if: contains(needs.is-tagged-release.outputs.tagVersion, 'v')
    runs-on: ubuntu-latest
    environment:
      name: test
      url: 'https://ccbc-test.apps.silver.devops.gov.bc.ca'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy
        uses: ./.github/actions/app
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          openshift_app_namespace: ${{ secrets.OPENSHIFT_APP_NAMESPACE }}
          openshift_metabase_namespace: ${{ secrets.OPENSHIFT_METABASE_NAMESPACE }}
          openshift_metabase_prod_namespace: ${{ secrets.OPENSHIFT_METABASE_PROD_NAMESPACE }}
          next_public_growthbook_api_key: ${{ secrets.NEXT_PUBLIC_GROWTHBOOK_API_KEY }}
          tag: ${{ env.TAG }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          secure_route: ${{ secrets.OPENSHIFT_SECURE_ROUTE }}
          aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
          aws_s3_region: ${{ secrets.AWS_S3_REGION }}
          aws_s3_key: ${{ secrets.AWS_S3_KEY }}
          aws_s3_secret_key: ${{ secrets.AWS_S3_SECRET_KEY }}
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
          aws_clam_s3_bucket: ${{ secrets.AWS_CLAM_S3_BUCKET }}
          certbot_email: ${{ secrets.CERTBOT_EMAIL }}
          certbot_server: ${{ secrets.CERTBOT_SERVER }}
          metabase_site_url: ${{ secrets.METABASE_SITE_URL }}
          metabase_embed_secret: ${{ secrets.METABASE_EMBED_SECRET }}
          cert: ${{ secrets.CERT }}
          cert_key: ${{ secrets.CERT_KEY }}
          cert_ca: ${{ secrets.CERT_CA }}
          sp_sa_user: ${{ secrets.SP_SA_USER }}
          sp_sa_password: ${{ secrets.SP_SA_PASSWORD }}
          sp_doc_library: ${{ secrets.SP_DOC_LIBRARY }}
          sp_site: ${{ secrets.SP_SITE }}
          sp_ms_file_name: ${{ secrets.SP_MS_FILE_NAME }}
          keycloak_host: ${{ secrets.KEYCLOAK_HOST }}
          sa_client_secret: ${{ secrets.SA_CLIENT_SECRET }}
          sa_client_id: ${{ secrets.SA_CLIENT_ID }}
          sp_list_name: ${{ secrets.SP_LIST_NAME }}
          environment: test

  deploy-to-openshift-production:
    needs:
      [
        deploy-to-openshift-test,
        ensure-sqitch-plan-ends-with-tag,
        is-tagged-release,
      ]
    if: contains(needs.is-tagged-release.outputs.tagVersion, 'v')
    runs-on: ubuntu-latest
    environment:
      name: production
      url: 'https://ccbc.apps.silver.devops.gov.bc.ca'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy
        uses: ./.github/actions/app
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          openshift_app_namespace: ${{ secrets.OPENSHIFT_APP_NAMESPACE }}
          openshift_metabase_namespace: ${{ secrets.OPENSHIFT_METABASE_NAMESPACE }}
          next_public_growthbook_api_key: ${{ secrets.NEXT_PUBLIC_GROWTHBOOK_API_KEY }}
          tag: ${{ env.TAG }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          secure_route: ${{ secrets.OPENSHIFT_SECURE_ROUTE }}
          aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
          aws_s3_region: ${{ secrets.AWS_S3_REGION }}
          aws_s3_key: ${{ secrets.AWS_S3_KEY }}
          aws_s3_secret_key: ${{ secrets.AWS_S3_SECRET_KEY }}
          aws_clam_s3_bucket: ${{ secrets.AWS_CLAM_S3_BUCKET }}
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
          certbot_email: ${{ secrets.CERTBOT_EMAIL }}
          certbot_server: ${{ secrets.CERTBOT_SERVER }}
          metabase_site_url: ${{ secrets.METABASE_SITE_URL }}
          metabase_embed_secret: ${{ secrets.METABASE_EMBED_SECRET }}
          cert: ${{ secrets.CERT }}
          cert_key: ${{ secrets.CERT_KEY }}
          cert_ca: ${{ secrets.CERT_CA }}
          sp_sa_user: ${{ secrets.SP_SA_USER }}
          sp_sa_password: ${{ secrets.SP_SA_PASSWORD }}
          sp_doc_library: ${{ secrets.SP_DOC_LIBRARY }}
          sp_site: ${{ secrets.SP_SITE }}
          sp_ms_file_name: ${{ secrets.SP_MS_FILE_NAME }}
          keycloak_host: ${{ secrets.KEYCLOAK_HOST }}
          sa_client_secret: ${{ secrets.SA_CLIENT_SECRET }}
          sa_client_id: ${{ secrets.SA_CLIENT_ID }}
          sp_list_name: ${{ secrets.SP_LIST_NAME }}
          environment: prod

  create-release:
    needs: ['deploy-to-openshift-production']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch latest tag
        id: fetch_tag
        run: echo "tagVersion=$(git describe --tags $(git rev-list --tags --max-count=1))" >>$GITHUB_OUTPUT
      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          generate_release_notes: true
          tag_name: ${{ steps.fetch_tag.outputs.tagVersion }}
