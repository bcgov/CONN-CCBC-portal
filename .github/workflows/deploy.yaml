name: deploy

on:
  workflow_call:
    secrets:
      OPENSHIFT_SERVER: { required: true }
      OPENSHIFT_TOKEN: { required: true }
      OPENSHIFT_APP_NAMESPACE: { required: true }
      OPENSHIFT_METABASE_NAMESPACE: { required: true }
      NEXT_PUBLIC_GROWTHBOOK_API_KEY: { required: true }
      CLIENT_SECRET: { required: true }
      OPENSHIFT_SECURE_ROUTE: { required: true }
      AWS_S3_BUCKET: { required: true }
      AWS_S3_REGION: { required: true }
      AWS_S3_KEY: { required: true }
      AWS_S3_SECRET_KEY: { required: true }
      AWS_ROLE_ARN: { required: true }
      CERTBOT_EMAIL: { required: true }
      CERTBOT_SERVER: { required: true }

env:
  TAG: sha-${{ github.sha }}

jobs:
  is-tagged-release:
    runs-on: ubuntu-latest
    outputs:
      tagVersion: ${{steps.tagVersion.outputs.tagVersion}}
    # if: github.event.ref == 'refs/heads/main'
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Is Tagged Commit
        id: tagVersion
        # Check if one of the commits is associated with a tag
        # Change this back to github.sha for when this is part of the main branch check
        run: |
          echo ::set-output name=tagVersion::$( git tag --contains ${{ github.event.pull_request.head.sha  }} | grep v*)

  output-of-itr:
    runs-on: ubuntu-latest
    needs: [is-tagged-release]
    steps:
      - name: What's it doing
        run: |
          echo ${{ needs.is-tagged-release.outputs.tagVersion }}

  deploy-to-openshift-development:
    # temporary
    needs: [is-tagged-release]
    if: contains(needs.is-tagged-release.outputs.tagVersion, 'v')
    runs-on: ubuntu-latest
    environment:
      name: development
      url: 'https://ccbc-dev.apps.silver.devops.gov.bc.ca'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy
        uses: ./.github/actions/app
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          openshift_app_namespace: ${{ secrets.OPENSHIFT_APP_NAMESPACE }}
          openshift_metabase_namespace: ${{ secrets.OPENSHIFT_METABASE_NAMESPACE }}
          next_public_growthbook_api_key: ${{ secrets.NEXT_PUBLIC_GROWTHBOOK_API_KEY }}
          tag: ${{ env.TAG }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          secure_route: ${{ secrets.OPENSHIFT_SECURE_ROUTE }}
          aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
          aws_s3_region: ${{ secrets.AWS_S3_REGION }}
          aws_s3_key: ${{ secrets.AWS_S3_KEY }}
          aws_s3_secret_key: ${{ secrets.AWS_S3_SECRET_KEY }}
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
          certbot_email: ${{ secrets.CERTBOT_EMAIL }}
          certbot_server: ${{ secrets.CERTBOT_SERVER }}
          environment: dev

  ensure-sqitch-plan-ends-with-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: ./.bin/sqitch-last-change-is-tag.sh db

  # deploy-to-openshift-production:
  #   needs: [deploy-to-openshift-test, ensure-sqitch-plan-ends-with-tag, is-tagged-release]
  #   if: contains(needs.is-tagged-release.outputs.tagVersion, 'v')
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: production
  #     url: 'https://ccbc.apps.silver.devops.gov.bc.ca'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Deploy
  #       uses: ./.github/actions/app
  #       with:
  #         openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
  #         openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
  #         openshift_app_namespace: ${{ secrets.OPENSHIFT_APP_NAMESPACE }}
  #         openshift_metabase_namespace: ${{ secrets.OPENSHIFT_METABASE_NAMESPACE }}
  #         next_public_growthbook_api_key: ${{ secrets.NEXT_PUBLIC_GROWTHBOOK_API_KEY }}
  #         tag: ${{ env.TAG }}
  #         client_secret: ${{ secrets.CLIENT_SECRET }}
  #         secure_route: ${{ secrets.OPENSHIFT_SECURE_ROUTE }}
  #         aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
  #         aws_s3_region: ${{ secrets.AWS_S3_REGION }}
  #         aws_s3_key: ${{ secrets.AWS_S3_KEY }}
  #         aws_s3_secret_key: ${{ secrets.AWS_S3_SECRET_KEY }}
  #         aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
  #         certbot_email: ${{ secrets.CERTBOT_EMAIL }}
  #         certbot_server: ${{ secrets.CERTBOT_SERVER }}
  #         environment: prod

  deploy-to-openshift-test:
    needs:
      [
        deploy-to-openshift-development,
        ensure-sqitch-plan-ends-with-tag,
        is-tagged-release,
      ]
    if: contains(needs.is-tagged-release.outputs.tagVersion, 'v')
    runs-on: ubuntu-latest
    environment:
      name: test
      url: 'https://ccbc-test.apps.silver.devops.gov.bc.ca'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy
        uses: ./.github/actions/app
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          openshift_app_namespace: ${{ secrets.OPENSHIFT_APP_NAMESPACE }}
          openshift_metabase_namespace: ${{ secrets.OPENSHIFT_METABASE_NAMESPACE }}
          next_public_growthbook_api_key: ${{ secrets.NEXT_PUBLIC_GROWTHBOOK_API_KEY }}
          tag: ${{ env.TAG }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          secure_route: ${{ secrets.OPENSHIFT_SECURE_ROUTE }}
          aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
          aws_s3_region: ${{ secrets.AWS_S3_REGION }}
          aws_s3_key: ${{ secrets.AWS_S3_KEY }}
          aws_s3_secret_key: ${{ secrets.AWS_S3_SECRET_KEY }}
          aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
          certbot_email: ${{ secrets.CERTBOT_EMAIL }}
          certbot_server: ${{ secrets.CERTBOT_SERVER }}
          environment: test
