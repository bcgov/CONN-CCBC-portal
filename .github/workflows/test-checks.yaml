# Tests that rely on the committed code, without needing the docker images to be built
name: test checks

env:
  PGPASSWORD: postgres
  PGUSER: postgres
  PGDATABASE: ccbc

on:
  workflow_call:

concurrency:
  group: test-checks-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # install-test-env:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: dev env setup
  #       uses: ./.github/actions/dev-env-setup
  #     - run: make install_dev_tools
  #     - run: make stop_pg # cleanly stop the database, otherwise it will complain in the subsequent jobs
  #     - run: yarn install --frozen-lockfile --check-files
  #       working-directory: ./app

  trivy-scan-code:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          format: sarif
          output: trivy-results.sarif
          exit-code: '0'
          ignore-unfixed: false
          severity: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@c0d1daa7f7e14667747d73a7dbbe8c074bc8bfe2
        with:
          sarif_file: 'trivy-results.sarif'

  codeql-scan:
    name: codeql-scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']
        os: ['linux']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@c0d1daa7f7e14667747d73a7dbbe8c074bc8bfe2
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@c0d1daa7f7e14667747d73a7dbbe8c074bc8bfe2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@c0d1daa7f7e14667747d73a7dbbe8c074bc8bfe2

  cocogitto:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Tag the base ref for pull requests
        shell: bash
        working-directory: .
        if: github.event_name == 'pull_request'
        run: git checkout "$GITHUB_BASE_REF" && git tag latest && git checkout "$GITHUB_HEAD_REF"
      - name: Conventional commits check
        uses: oknozor/cocogitto-action@v3
        with:
          check-latest-tag-only: true

  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: ./.bin/install-gitleaks-linux-x64.sh
      - run: ./gitleaks detect --exit-code 0 --report-format sarif --report-path "gitleaks.sarif"
      - uses: github/codeql-action/upload-sarif@c0d1daa7f7e14667747d73a7dbbe8c074bc8bfe2
        with:
          sarif_file: 'gitleaks.sarif'

  check_immutable_sqitch_files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: ./.bin/sqitch-check-immutable-files.sh db origin/main

  check_deleted_sqitch_tags:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: |
          node - <<EOF
          const { execSync } = require('child_process');
          let tagError = false
          // Get the diff
          const diff = execSync('git diff origin/main -- ./db/sqitch.plan').toString();

          // Split the diff into lines
          const lines = diff.split('\n');

          // Counters to keep track of lines starting with @
          const counters = {};

          for (const line of lines) {
            // If it's a deletion and starts with @
            if (line.startsWith('-@')) {
              const content = line.slice(1); // remove the leading -
              counters[content] = (counters[content] || 0) - 1;
            }
            // If it's an addition and starts with @
            else if (line.startsWith('+@')) {
              const content = line.slice(1); // remove the leading +
              counters[content] = (counters[content] || 0) + 1;
            }
          }

          // Check if there is any line that was deleted but not added back
          for (const content in counters) {
            if (counters[content] < 0) {
              console.error(`Error: Tag deleted: ${content}`);
              tagError=true
            } else if(counters[content] > 1) {
              console.error(`Error: Tag added multiple times, likely due to merge error: ${content}`)
              tagError=true
            }
          }
          if(tagError){
            process.exit(1);
          }
          EOF

  lint-chart:
    runs-on: ubuntu-latest
    environment:
      name: tools
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Authenticate to OpenShift Linter namespace
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_LINTER_TOKEN }}
          insecure_skip_tls_verify: true
      - run: make lint_chart
